# -*- coding: utf-8 -*-
"""time_series.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1h6VcL4UZAcrmtx7PxrYAk7v2rusL21a7
"""

#Import libraries and load dataset from own github
import pandas as pd
timeseries = pd.read_csv("https://raw.githubusercontent.com/bhusal-ujjwal/time_series/main/time_series_covid19_deaths_global.csv")

#view dataset details
timeseries

#shape of the dateset
timeseries.shape

# view column details to check null values
timeseries.info(max_cols=1147)



#since country is already there and data is about multiple countries, province is not relevant and has too many null values so we drop it and display the updated dataframe
#fill the null values of lat long with mean value as well.
timeseries.drop(columns=['Province/State'], inplace=True)
timeseries["Lat"] = timeseries["Lat"].fillna(timeseries["Lat"].mean())
timeseries["Long"] = timeseries["Long"].fillna(timeseries["Long"].mean())
print(timeseries)

# Remove duplicate entries
timeseries.drop_duplicates(inplace=True)



# view column details again to confirm preprocessing
timeseries.info(max_cols=1147)



timeseries.info()





# convert the date
timeseries.columns = list(timeseries.columns[:3]) + pd.to_datetime(timeseries.columns[3:], format='%m/%d/%y').strftime('%Y-%m-%d').tolist()

# save the pre processed dataset to a new CSV file
timeseries.to_csv("PreProcessed_covid19_data.csv", index=False)

# Display first 5 rows of the loaded data
timeseries.head(5)

# Summary about the data shape, columns, datatypes, and statistical values
timeseries.shape

timeseries.columns

timeseries.dtypes

print(timeseries.describe())





# calculate the mean and median of the daily cases
daily_cases = timeseries.iloc[:, 3:]

mean_daily_cases = daily_cases.mean()
median_daily_cases = daily_cases.median()

print("Mean of the daily cases:", mean_daily_cases)
print("Median of the daily cases:", median_daily_cases)





# daily death cases across all countries
daily_deaths_worldwide = timeseries.iloc[:, 3:].sum(axis=0)

print("Daily death cases worldwide:")
print(daily_deaths_worldwide)



# function to calculate daialy increase in death case
def daily_increase(death_cases):
    return death_cases.diff().fillna(death_cases.iloc[0])

# calculate and print the daily increase in death cases
daily_increase_cases = daily_increase(daily_deaths_worldwide)

print("Daily increase in death cases worldwide:")
print(daily_increase_cases)



#import matpilot for plotting
import matplotlib.pyplot as plt

# Plot the daily death cases worldwide using line plot
plt.figure(figsize=(10, 6))
plt.plot(daily_deaths_worldwide.index, daily_deaths_worldwide.values, color='red', marker='o', linestyle='-')
plt.title('Daily Death Cases Worldwide')
plt.xlabel('Date')
plt.ylabel('Number of Deaths')
plt.xticks(rotation=45)
plt.grid(True)
plt.tight_layout()
plt.show()



